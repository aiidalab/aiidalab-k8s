proxy:
    secretToken: "{{ secret_token }}"

singleuser:
  image:
    name: aiidalab/aiidalab-docker-stack
    #tag: latest
    tag: 20.02.2
    pullPolicy: Always
  fsGid: 1000
  cmd: /sbin/my_my_init
  extraEnv:
    NB_USER: "aiida"
    NB_UID: 1000
    NB_GID: 1000
  storage:
    homeMountPath: "/home/aiida"
    dynamic:
      storageClass: cinder-csi
  memory:
    limit: 9G
    guarantee: 3G
  cpu:
    limit: 2.0
    guarantee: .5
  startTimeout: 180

auth:
  custom:
    className: marketplace_oauthenticator.MarketPlaceOAuthenticator
    config:
      create_users: True

hub:
  db:
    pvc:
      storageClassName: cinder-csi
  extraConfig: |
    c.KubeSpawner.http_timeout = 120
    # phusion init system needs to run as root
    c.KubeSpawner.uid = 0
    # Setting the gid was needed to fix 
    # https://github.com/aiidalab/aiidalab-docker-stack/issues/20
    c.KubeSpawner.gid = 1000

    # insert template path for custom login template
    c.JupyterHub.template_paths.insert(0, "/etc/jupyterhub/templates")
    #c.JupyterHub.authenticator_class = (
        #'<module_containing>.MarketplaceOAuthenticator')

    c.MarketplaceOAuthenticator.client_id = "{{ oauth_client_id }}"
    c.MarketplaceOAuthenticator.client_secret = "{{ oauth_client_secret }}"
    c.MarketplaceOAuthenticator.tls_verify = False

  extraVolumes:
    ## Make the hub pod be able to access a ConfigMap volume
    - name: hub-templates
      configMap:
        name: hub-templates
  extraVolumeMounts:
    ## Make the hub pod hub container mount that ConfigMap volume
    - mountPath: /etc/jupyterhub/templates
      name: hub-templates

# removing inactive pods (=no response from the user's browser).
cull:
  enabled: true
  # timeout = 24h
  timeout: 86400
  # check every hour
  every: 3600
